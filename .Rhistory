options(width=70)
letters
letters[1:5]
class(a)
c(a, "xyz")
b <- factor(letter[1:5])
a <- letters[1:5]
a
factor(a)
data.frame(..., stringAsFactors=FALSE)
getwd()
cd .
sh <- read.csv("data/seahawks2016.csv")
install.packages("tibble")
library(tibble)
tib <- tibble(a=1:2, b=c("Huskies", "Seahawks"))
tib
install.packages("data.table")
library(data.table)
days_to_break <- today - winter_break
today <- Sys.Date()
winter_break <- as.Date("2018-12-15")
days_to_break <- today - winter_break
days_to_break
days_to_break
bday_intro <- function(name, age) {
paste (make_introduction, "In", number_of_days, "I'll be", new_age)
}
my_bday_intro <- bday_intro(my_name, my_age, upcoming_bday)
bday_intro <- function(name, age, character_string) {
paste (make_introduction, "In", number_of_days, "I'll be", new_age)
}
my_bday_intro <- bday_intro("Wanyu", 19, 2018-11-20)
bday_intro <- function(name, age, character_string) {
paste (make_introduction, "In", number_of_days, "I'll be", new_age)
}
my_bday_intro <- bday_intro("Wanyu", 19, 2018-11-20)
class_survival <- mytitanic[mytitanic$class == as.character(ticket_class), "Freq"]
## Write your `students` data.frame to a new .csv file inside your data/ directory with the filename `grades.csv`.
## Make sure not to write row names.
write.csv(students, file = "data/Students.csv", row.names=FALSE)
################################### Loading R Data (28 points) ###################################
## In this section, you'll work with some data that comes built into the R environment.
## Load the `Titanic` data set. You may also want to use RStudio to `View()` it to inspect its rows and columns,
## or just print (selected lines of) it.  ``
View(Titanic)
## This data set actually loads in a format called a *table*
## This is not a data frame. Use the `is.data.frame()` function to confirm this.
is.data.frame(Titanic)
## You should convert the `Titanic` variable into a data frame; you can use the `data.frame()` function or `as.data.frame()`
## Be sure to **not** treat strings as factors!
mytitanic <- data.frame(Titanic, stringsAsFactors=FALSE)
# Create a variable `children` that are the rows of the data frame with information about children on the Titanic.
children <- mytitanic[mytitanic$Age =="Child", ]
# Create a variable `num_children` that is the total number of children on the Titanic.
# Hint: remember the `sum()` function!
num_children <- nrow(children)
## Create a variable `most_lost` which has row with the largest absolute number of losses (people who did not survive).
## Tip: you can use multiple statements (lines of code), such as to make "intermediate" sub-frames
##  (similar to what you did with the `children` variables)
most_lost <- mytitanic[mytitanic$Freq == max(mytitanic$Freq),]
## Define a function called `survival_rate` that takes in a ticket class
## (i.e., "1st", "2nd", "3rd" or "Crew") as an argument.
## This function should return a sentence describing the total survival rate of men vs. "women and children" in that ticketing class.
## For example:
##   "Of Crew class, 87% of women and children survived and 22% of men survived."
##
## The approach you take to generating the sentence to return is up to you. A good solution will likely utilize
## intermediate variables (subsets of data frames) and filtering to produce the required data.
## Avoid using a loops where you can utilize vectorized functions!
survival_rate <- function(ticket_class) {
male_adults <- mytitanic[mytitanic$Sex == "Male" & mytitanic$Age == "Adult",]
total_male_survival <- sum(male_adults$Freq)
class_survival <- mytitanic[mytitanic$class == as.character(ticket_class), "Freq"]
paste("of Crew class, 87% of women and children survived and 22% of men survived.")
}
View(mytitanic)
class_survival <- mytitanic[mytitanic$Class == as.character(ticket_class), "Freq"]
men_survival_rate <- class_survival/total_male_survival*100
survival_rate <- function(ticket_class) {
class_survival <- mytitanic[mytitanic$Class == as.character(ticket_class), "Freq"]
male_adults <- mytitanic[mytitanic$Sex == "Male" & mytitanic$Age == "Adult",]
total_male_survival <- sum(male_adults$Freq)
men_survival_rate <- class_survival/total_male_survival*100
women_children <- mytitanic[mytitanic$Sex == "Female" & mytitanic$Age == "Child"]
total_female_survival <- sum(women_children$Freq)
women_children_survival_rate <- class_survival/total_female_survival*100
paste("of", ticket_class, "class,", women_children_survival_rate, "% of women and children survived and", men_survival_rate, "% of men survived.")
}
survival_rate("3rd")
## Call your `survival_rate()` function on each of the ticketing classes (`Crew`, `1st`, `2nd`, and `3rd`)
survival_rate("Crew")
class_survival <- mytitanic[mytitanic$Class == as.character(ticket_class), "Freq"]
survival_rate <- function(ticket_class) {
class_survival <- mytitanic[mytitanic$Class == as.character(ticket_class), "Freq"]
male_adults <- mytitanic[mytitanic$Sex == "Male" & mytitanic$Age == "Adult",]
total_male_survival <- sum(male_adults$Freq)
men_survival_rate <- class_survival/total_male_survival*100
women_children <- mytitanic[mytitanic$Sex == "Female" & mytitanic$Age == "Child",]
total_female_survival <- sum(women_children$Freq)
women_children_survival_rate <- class_survival/total_female_survival*100
paste("of", ticket_class, "class,", women_children_survival_rate, "% of women and children survived and", men_survival_rate, "% of men survived.")
}
## Call your `survival_rate()` function on each of the ticketing classes (`Crew`, `1st`, `2nd`, and `3rd`)
survival_rate("Crew")
survival_rate("3rd")
## Call your `survival_rate()` function on each of the ticketing classes (`Crew`, `1st`, `2nd`, and `3rd`)
survival_rate("Crew")
survival_rate <- function(ticket_class) {
class_survival <- mytitanic[mytitanic$Class == as.character(ticket_class),]
male_adults <- class_survival[class_survival$Sex == "Male" & class_survival$Age == "Adult",]
total_male_survival <- sum(male_adults$Freq)
men_survival_rate <- class_survival/total_male_survival*100
women_and_children <- class_survival[class_survival$Sex == "Female" | class_survival$Age == "Child"]
total_female_survival <- sum(women_children$Freq)
women_and_children_survival_rate <- class_survival/total_female_survival*100
paste("of", ticket_class, "class,", women_children_survival_rate, "% of women and children survived and", men_survival_rate, "% of men survived.")
}
## Call your `survival_rate()` function on each of the ticketing classes (`Crew`, `1st`, `2nd`, and `3rd`)
survival_rate("Crew")
survived_men_adults <- sum(male_adults$Survived == "Yes", "Freq")
survived_men_adults <- male_adults$Survived == "Yes"
## Using your `BiggerChange` function, create a variable `usa_or_france` that describes who had a larger gain in life expectancy
## (the United States or France)
usa_or_france <- BiggerChange("United States", "France")
BiggerChange <- function(country1, country2) {
country1_change <- life_expectancy[life_expectancy$country == as.character(country1), "change"]
country2_change <- life_expectancy[life_expectancy$country == as.character(country2), "change"]
if(country1_change > country2_change){
large_gain <- country1_change
growth <- country1_change - country2_change
paste("The country with the bigger change in life expectancy was", country1,
"(gain=", country1_change, "), whose life expectancy grew by",
growth, "years more than", country2, "'s", "(gain=",
country2_change, ")." )
}else{
large_gain <- country2_change
growth <- country2_change - country1_change
paste("The country with the bigger change in life expectancy was", country2,
"(gain=", country2_change, "), whose life expectancy grew by",
growth, "years more than", country1, "'s", "(gain=",
country1_change, ").")
}
}
## Using your `BiggerChange` function, create a variable `usa_or_france` that describes who had a larger gain in life expectancy
## (the United States or France)
usa_or_france <- BiggerChange("United States", "France")
BiggerChange <- function(country1, country2) {
country1_change <- life_expectancy[life_expectancy$country == as.character(country1), "change"]
country2_change <- life_expectancy[life_expectancy$country == as.character(country2), "change"]
if(country1_change > country2_change){
large_gain <- country1_change
growth <- country1_change - country2_change
paste("The country with the bigger change in life expectancy was", country1,
"(gain=", country1_change, "), whose life expectancy grew by",
growth, "years more than", country2, "'s", "(gain=",
country2_change, ")." )
}else{
large_gain <- country2_change
growth <- country2_change - country1_change
paste("The country with the bigger change in life expectancy was", country2,
"(gain=", country2_change, "), whose life expectancy grew by",
growth, "years more than", country1, "'s", "(gain=",
country1_change, ").")
}
}
## Using your `BiggerChange` function, create a variable `usa_or_france` that describes who had a larger gain in life expectancy
## (the United States or France)
usa_or_france <- BiggerChange("United States", "France")
# Using the `read.csv` function, read the life-expectancy.csv file into a variable called `life_expectancy`
# Makes sure not to read strings as factors
life_expectancy <- read.csv('data/life-expectancy.csv', stringsAsFactors = FALSE)
## Determine if life_expectancy is a data.frame by using the is.data.frame function.
## You may also want to inspect it's content by View() or by just printing chunks of it.
is.data.frame(life_expectancy)
# Create a column `life_expectancy$change` that is the change in life expectancy from 1960 to 2013
life_expectancy$change <- (life_expectancy$le_2013 - life_expectancy$le_1960)
# Create a variable `most_improved` that is the name of the country with the largest gain in life expectancy
most_improved <- life_expectancy[life_expectancy$change == max(life_expectancy$change),"country"]
## Create a variable `num_small_gain` that has the number of countries
## whose life expectance has improved fewer than 5 years between 1960 and 2013
num_small_gain <- nrow(life_expectancy[life_expectancy$change < 5,])
## Write a function `CountryChange` that takes in a country's name as a parameter,
## and returns it's change in life expectancy from 1960 to 2013
CountryChange <- function(country_name) {
country_life_expectancy <- life_expectancy[life_expectancy$country == country_name,"change"]
return(country_life_expectancy)
}
## Using your `CountryChange` function, create a variable `sweden_change`
## that is the change in life expectancy from 1960 to 2013 in Sweden
sweden_change <- CountryChange("Sweden")
# Define a function `LowestLifeExpInRegion` that takes in a **region** as an argument, and returns
# the **name of the country** with the lowest life expectancy in 2013 (in that region)
LowestLifeExpINRegion <- function(region) {
region <- life_expectancy[life_expectancy$region == as.character(region),]
return(life_expectancy[which.min(region$le_2013), "country"])
}
## Using the function you just wrote, create a variable `lowest_in_south_asia`
## that is the country with the lowest life expectancy in 2013 in South Asia
lowest_in_south_asia <- LowestLifeExpINRegion("South Asia")
## Write a function `BiggerChange` that takes in two country names as parameters, and returns a sentence that
## describes which country experienced a larger gain in life expectancy (and by how many years).
## For example, if you passed the values "China", and "Bolivia" into your function, it would return this:
## "The country with the bigger change in life expectancy was China (gain=31.9),
## whose life expectancy grew by 7.4 years more than Bolivia's (gain=24.5)."
## Make sure to round your numbers.
BiggerChange <- function(country1, country2) {
country1_change <- life_expectancy[life_expectancy$country == as.character(country1), "change"]
country2_change <- life_expectancy[life_expectancy$country == as.character(country2), "change"]
if(country1_change > country2_change){
large_gain <- country1_change
growth <- country1_change - country2_change
paste("The country with the bigger change in life expectancy was", country1,
"(gain=", country1_change, "), whose life expectancy grew by",
growth, "years more than", country2, "'s", "(gain=",
country2_change, ")." )
}else{
large_gain <- country2_change
growth <- country2_change - country1_change
paste("The country with the bigger change in life expectancy was", country2,
"(gain=", country2_change, "), whose life expectancy grew by",
growth, "years more than", country1, "'s", "(gain=",
country1_change, ").")
}
}
## Using your `BiggerChange` function, create a variable `usa_or_france` that describes who had a larger gain in life expectancy
## (the United States or France)
usa_or_france <- BiggerChange("United States", "France")
num_small_gain <- nrow(life_expectancy[life_expectancy$change < 5,])
## Write a function `CountryChange` that takes in a country's name as a parameter,
## and returns it's change in life expectancy from 1960 to 2013
CountryChange <- function(country_name) {
country_life_expectancy <- life_expectancy[life_expectancy$country == country_name,"change"]
return(country_life_expectancy)
}
## Using your `CountryChange` function, create a variable `sweden_change`
## that is the change in life expectancy from 1960 to 2013 in Sweden
sweden_change <- CountryChange("Sweden")
# Define a function `LowestLifeExpInRegion` that takes in a **region** as an argument, and returns
# the **name of the country** with the lowest life expectancy in 2013 (in that region)
LowestLifeExpINRegion <- function(region) {
region <- life_expectancy[life_expectancy$region == as.character(region),]
return(life_expectancy[which.min(region$le_2013), "country"])
}
## Using the function you just wrote, create a variable `lowest_in_south_asia`
## that is the country with the lowest life expectancy in 2013 in South Asia
lowest_in_south_asia <- LowestLifeExpINRegion("South Asia")
## Write a function `BiggerChange` that takes in two country names as parameters, and returns a sentence that
## describes which country experienced a larger gain in life expectancy (and by how many years).
## For example, if you passed the values "China", and "Bolivia" into your function, it would return this:
## "The country with the bigger change in life expectancy was China (gain=31.9),
## whose life expectancy grew by 7.4 years more than Bolivia's (gain=24.5)."
## Make sure to round your numbers.
BiggerChange <- function(country1, country2) {
country1_change <- life_expectancy[life_expectancy$country == as.character(country1), "change"]
country2_change <- life_expectancy[life_expectancy$country == as.character(country2), "change"]
if(country1_change > country2_change){
large_gain <- country1_change
growth <- country1_change - country2_change
paste("The country with the bigger change in life expectancy was", country1,
"(gain=", country1_change, "), whose life expectancy grew by",
growth, "years more than", country2, "'s", "(gain=",
country2_change, ")." )
}else{
large_gain <- country2_change
growth <- country2_change - country1_change
paste("The country with the bigger change in life expectancy was", country2,
"(gain=", country2_change, "), whose life expectancy grew by",
growth, "years more than", country1, "'s", "(gain=",
country1_change, ").")
}
}
## Using your `BiggerChange` function, create a variable `usa_or_france` that describes who had a larger gain in life expectancy
## (the United States or France)
usa_or_france <- BiggerChange("United States", "France")
BiggerChange("United States", "France")
install.packages("httr")
library("http")
library(http)
library(httr)
res <- GET(uri)
resources <- "resources"
base <- "https://canvas.uw.edu/api/v1"
uri <- paste(base, resource, sep = "/")
uri <- paste(base, resource, sep="/")
resources <- "courses"
uri <- paste(base, resource,sep="/")
resource <- "course"
uri <- paste(base, resource, sep="/")
token <- readLines("~/Documents/canvas-oauth")
token <- readLines("~/Documents/keys/canvas-oauth")
library(httr)
base <- "https://api.github.com"
org <- "info201-au2018"
uri <- paste0(base, "orgs/", org)
header <- add_headers(Accept = "application/vnd.github.v3+json")
res <- httr::GET(uri, query=list(per_page=3), header)
county_of_male_largest_increase <- select(counties_binge_drinking, state, county, males_2002, males_2012) %>%
county_of_largest_incease$increase <- county_of_male_largest_increase$males_2002 - county_of_male_largest_increase$males_2012 %>%
select(county_of_male_largest_increase, state, county, increase)
county_of_largest_incease$increase <- county_of_male_largest_increase$males_2002 - county_of_male_largest_increase$males_2012 %>%
install.packages("kableExtra")
library(kableExtra)
propublica_base <- "https://api.propublica.org/congress/v1"
source("keys.R")
## propublica_query <- list(key = propublica_key)
propublica_congress <- "/115/"
propublica_chamber <- "house/members.json"
data <- paste0(propublica_base,propublica_congress,propublica_chamber)
propublica_response <- httr::GET(data, add_headers('X-API-Key' = propublica_key))
propublica_content <- content(propublica_response, 'text')
propublica_data <- fromJSON(propublica_content)
library(R.utils)
temp_prec <- data.table::fread('temp_prec_tiny.csv.bz2', sep = '\t',
stringsAsFactors = FALSE)
## filter out North American observations
library(dplyr)
north_american_temp_prec <- filter(temp_prec, latitude > 10, longitude < 300, longitude > 180)
jpeg(filename = "north_amer_temp_prec.jpg", width = 480, height = 480, pointsize = 12,
quality = 85, bg = "white")
## select the correct year - plot longitude-latitude and color according to the temp/prec variable
##  recommend to use ggplot() but you can use something else too.
library(stringr)
library("stringr", lib.loc="~/R/win-library/3.5")
temp_prec <- data.table::fread('temp_prec_tiny.csv.bz2', sep = '\t',
stringsAsFactors = FALSE)
temp_prec <- data.table::fread('temp_prec_tiny.csv.bz2', sep = '\t',
stringsAsFactors = FALSE)
library(R.utils)
temp_prec <- data.table::fread('temp_prec_tiny.csv.bz2', sep = '\t',
stringsAsFactors = FALSE)
temp_prec <- data.table::fread('temp_prec_tiny.csv.bz2', sep = '\t')
temp_prec <- data.table::fread("temp_prec_tiny.csv.bz2", sep = '\t')
setwd("C:/Users/wanyu/OneDrive/Desktop/info-201/final_project")
library(data.table)
wa_wildfires <- data.table::fread("wa-wildfires")
setwd("C:/Users/wanyu/OneDrive/Desktop/info-201/final_project")
wa_wildfires <- data.table::fread("wa-wildfires.csv")
View(wa_wildfires)
library(ggplot2)
